# Automated Bambu Studio Version Updates
#
# This workflow automatically checks for new Bambu Studio releases and updates
# the version referenced in this repository. When a new version is found:
# 1. Updates scripts/bambu-studio-version.txt with the new version
# 2. Creates a pull request with the changes
# 3. Enables auto-merge so the PR will be merged automatically if CI passes
#
# This ensures LANbu Handy always uses the latest stable version of Bambu Studio CLI.

name: Update Bambu Studio

on:
  schedule:
    # Run every hour
    - cron: '0 * * * *'
  workflow_dispatch: # Allow manual trigger for testing

permissions:
  contents: write
  pull-requests: write

jobs:
  check-for-updates:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get current Bambu Studio version
        id: current-version
        run: |
          if [ -f "scripts/bambu-studio-version.txt" ]; then
            current_version=$(cat scripts/bambu-studio-version.txt | tr -d '[:space:]')
          else
            current_version="none"
          fi
          echo "version=$current_version" >> $GITHUB_OUTPUT
          echo "Current Bambu Studio version: $current_version"

      - name: Get latest Bambu Studio release
        id: latest-version
        run: |
          # Get the latest release version from GitHub API with retry logic
          echo "Fetching latest Bambu Studio release..."

          latest_version=""
          max_attempts=5
          attempt=1

          while [ $attempt -le $max_attempts ] && [ -z "$latest_version" ]; do
            echo "Attempt $attempt of $max_attempts..."

            # Try to fetch the latest release
            api_response=$(curl -s --max-time 30 "https://api.github.com/repos/bambulab/BambuStudio/releases/latest" 2>/dev/null)

            if [ $? -eq 0 ] && [ -n "$api_response" ]; then
              latest_version=$(echo "$api_response" | grep '"tag_name"' | cut -d'"' -f4)

              if [ -n "$latest_version" ]; then
                echo "✅ Successfully fetched latest version: $latest_version"
                break
              else
                echo "⚠️ API response received but could not parse tag_name"
              fi
            else
              echo "⚠️ Failed to get API response (curl error or timeout)"
            fi

            if [ $attempt -lt $max_attempts ]; then
              sleep_time=$((attempt * 2))  # Exponential backoff: 2, 4, 6, 8 seconds
              echo "Waiting ${sleep_time} seconds before retry..."
              sleep $sleep_time
            fi

            attempt=$((attempt + 1))
          done

          if [ -z "$latest_version" ]; then
            echo "❌ Error: Could not fetch latest version from GitHub API after $max_attempts attempts"
            echo "This may be due to network issues, API rate limits, or service unavailability"
            exit 1
          fi

          echo "version=$latest_version" >> $GITHUB_OUTPUT
          echo "Latest Bambu Studio version: $latest_version"

      - name: Check if update is needed
        id: check-update
        run: |
          current="${{ steps.current-version.outputs.version }}"
          latest="${{ steps.latest-version.outputs.version }}"

          if [ "$current" != "$latest" ]; then
            echo "needs_update=true" >> $GITHUB_OUTPUT
            echo "Update needed: $current -> $latest"
          else
            echo "needs_update=false" >> $GITHUB_OUTPUT
            echo "No update needed: already on $current"
          fi

      - name: Update version file
        if: steps.check-update.outputs.needs_update == 'true'
        run: |
          echo "${{ steps.latest-version.outputs.version }}" > scripts/bambu-studio-version.txt
          echo "Updated scripts/bambu-studio-version.txt to ${{ steps.latest-version.outputs.version }}"

      - name: Create Pull Request
        if: steps.check-update.outputs.needs_update == 'true'
        id: create-pr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update Bambu Studio to ${{ steps.latest-version.outputs.version }}'
          title: 'Update Bambu Studio to ${{ steps.latest-version.outputs.version }}'
          body: |
            This is an automated update of Bambu Studio CLI version.

            **Changes:**
            - Updated `scripts/bambu-studio-version.txt` from `${{ steps.current-version.outputs.version }}` to `${{ steps.latest-version.outputs.version }}`

            **Release Notes:**
            See the [Bambu Studio release page](https://github.com/bambulab/BambuStudio/releases/tag/${{ steps.latest-version.outputs.version }}) for details about this version.

            This PR will be automatically merged once CI checks pass.
          branch: auto-update/bambu-studio-${{ steps.latest-version.outputs.version }}
          delete-branch: true

      - name: Trigger CI checks
        if: steps.check-update.outputs.needs_update == 'true' && steps.create-pr.outputs.pull-request-number
        run: |
          # Configure git for the action
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # Checkout the PR branch that was just created
          git fetch origin
          git checkout auto-update/bambu-studio-${{ steps.latest-version.outputs.version }}

          # Create an empty commit to trigger CI workflows
          # This is necessary because PRs created by actions don't trigger workflows by default
          git commit --allow-empty -m "ci: trigger workflow checks for Bambu Studio update"
          git push origin auto-update/bambu-studio-${{ steps.latest-version.outputs.version }}

          echo "✅ Pushed empty commit to trigger CI checks"

      - name: Enable auto-merge
        if: steps.check-update.outputs.needs_update == 'true' && steps.create-pr.outputs.pull-request-number
        run: |
          # Wait a moment for the CI to be triggered
          sleep 10

          # Enable auto-merge for the PR
          echo "Enabling auto-merge for PR #${{ steps.create-pr.outputs.pull-request-number }}"
          if gh pr merge ${{ steps.create-pr.outputs.pull-request-number }} --auto --squash; then
            echo "✅ Auto-merge enabled successfully"
          else
            echo "⚠️ Failed to enable auto-merge - this may be due to branch protection settings"
            echo "The PR has been created and will need to be merged manually"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Summary
        run: |
          if [ "${{ steps.check-update.outputs.needs_update }}" == "true" ]; then
            echo "✅ Created PR #${{ steps.create-pr.outputs.pull-request-number }} to update Bambu Studio to ${{ steps.latest-version.outputs.version }}"
            echo "The PR will auto-merge once CI checks pass."
          else
            echo "ℹ️ No update needed - already on latest version ${{ steps.current-version.outputs.version }}"
          fi
